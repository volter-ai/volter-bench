timestamp,run_id,agent_id,ladder,run,status,error,traceback,logs,project_directory,commit_url
2024-10-17 13:08:26,5f4e8278-ffce-41e9-a3af-05ec22a409c0,OneShotCoreAgent,creature_battler_01,1,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_01_1/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:08:40,03fd1323-5f09-499b-adb4-67cbcb7632d9,OneShotCoreAgent,creature_battler_01,2,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_01_2/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:10:34,bd5af1d6-f41a-48bc-915c-171bd59e0bf8,OneShotCoreAgent,creature_battler_01,3,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_01_3/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:10:49,e8469f71-8f89-46f8-b0ed-bd23c8e2797a,OneShotCoreAgent,creature_battler_01,4,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_01_4/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:12:49,4d208b0d-81fd-4052-8e66-f0c03c855c34,OneShotCoreAgent,creature_battler_01,5,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_01_5/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:13:12,10685e03-5b63-4bc4-802b-e3f18d45f53f,OneShotCoreAgent,creature_battler_01,6,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_01_6/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:14:55,ff98afcc-2144-458a-bed4-8e36246257c3,OneShotCoreAgent,creature_battler_02,1,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_02_1/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:14:59,969da714-9477-4cfc-9410-1c03b70d96ff,OneShotCoreAgent,creature_battler_01,7,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_01_7/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:18:04,7a38e6c6-6b6a-4eee-9520-79666dc838ad,OneShotCoreAgent,creature_battler_02,2,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_02_2/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:18:15,12fcf213-409e-4747-9df8-531406a175e1,OneShotCoreAgent,creature_battler_02,3,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_02_3/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:20:22,53ff58cf-5cb0-4535-9e8a-33790ef9b7f9,OneShotCoreAgent,creature_battler_02,4,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_02_4/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:21:40,72803802-9807-4afa-9422-8d6d716b0abc,OneShotCoreAgent,creature_battler_02,5,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_02_5/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:22:19,c2f46216-196a-4290-99ae-485be3aabcef,OneShotCoreAgent,creature_battler_02,6,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_02_6/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:24:35,2b928384-df26-4237-bd57-6ab44d89e896,OneShotCoreAgent,creature_battler_02,7,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_02_7/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:24:58,6e4304f9-31b5-4896-b5b3-21b0c4955513,OneShotCoreAgent,creature_battler_03,1,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_03_1/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:27:06,c531114e-b6d5-406c-bdc6-f3bfe8b46b11,OneShotCoreAgent,creature_battler_03,2,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_03_2/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:28:59,d894fbb1-3385-491b-8afd-91e11652bc06,OneShotCoreAgent,creature_battler_03,3,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_03_3/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:29:35,63b5aa7c-bae0-4178-a7bc-282c4bc7207f,OneShotCoreAgent,creature_battler_03,4,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_03_4/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:32:08,1fa94bd1-7d22-4fc8-9246-9755efe14509,OneShotCoreAgent,creature_battler_03,6,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_03_6/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:33:14,374a6e35-674a-48b1-8845-ed6940a2c21e,OneShotCoreAgent,creature_battler_03,5,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_03_5/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:33:54,8db36873-c04f-44d7-a3c0-03d4087da333,OneShotCoreAgent,creature_battler_03,7,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_03_7/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:35:41,843c22e3-6ae8-4fc5-a862-a9197f9896e3,OneShotCoreAgent,creature_battler_04,1,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_04_1/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:36:30,94dc4a38-f52c-4227-9333-08b542c7fb19,OneShotCoreAgent,creature_battler_04,2,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_04_2/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:38:43,6a4a2975-ba3e-487c-9828-bda06e836087,OneShotCoreAgent,creature_battler_04,3,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_04_3/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:39:00,7a44c4d0-fa39-4e3d-8471-06f7af37614d,OneShotCoreAgent,creature_battler_04,4,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_04_4/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:40:42,b68feeaf-132f-464d-b5ac-780f5ec6a50d,OneShotCoreAgent,creature_battler_04,6,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_04_6/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:41:25,38a551bd-af03-4eef-8c3e-961b4da2eb56,OneShotCoreAgent,creature_battler_04,5,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_04_5/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:43:18,b2609733-97b7-410c-8ca6-2fbd351d3843,OneShotCoreAgent,creature_battler_04,7,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_04_7/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:48:27,3a041d3e-1963-473a-9ee2-3e43f639b9ff,OneShotCoreAgent,creature_battler_05,1,failure,"After 5 attempts to debug, could not create a bug-free game. Still have error Pytest failed with exit code 1. Output:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-7.3.1, pluggy-1.5.0
rootdir: [REDACT]/volter-monorepo/packages/lib-volter-mge2
configfile: pytest.ini
plugins: metadata-3.1.1, anyio-4.6.2.post1, Faker-30.6.0, timeout-2.3.1, time-machine-2.16.0, html-3.2.0, asyncio-0.23.8, sugar-0.9.7, cov-4.1.0
asyncio: mode=Mode.STRICT
collected 3 items

main_game/tests/test_main_game_scene.py F                                [ 33%]
main_game/tests/test_main_menu_scene.py .                                [ 66%]
main_game/tests/test_whole_game.py F                                     [100%]

=================================== FAILURES ===================================
__________ TestMainGameSceneRandomRun.test_main_game_scene_random_run __________

self = <tests.test_main_game_scene.TestMainGameSceneRandomRun object at 0x[REDACTED]>
app = <main_game.main.App object at 0x[REDACTED]>

    def test_main_game_scene_random_run(self, app):
        for i in range(10):
            print(f""starting random run iteration {i}"")
            HumanListener.random_mode = True
            HumanListener.random_mode_counter = 30  # Increased to 30 for more complex scene
    
            player = app.create_player(f""player_{i}"")
            main_game_scene = MainGameScene(app, player)
    
            class TransitionFromScene(Exception):
                pass
    
            def exit_scene(*args, **kwargs):
                raise TransitionFromScene()
    
            with patch.object(MainGameScene, '_transition_to_scene', side_effect=exit_scene) as mock_transition, \
                    patch.object(MainGameScene, '_quit_whole_game') as mock_quit:
    
                try:
>                   main_game_scene.run()

main_game/tests/test_main_game_scene.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main_game/scenes/main_game_scene.py:33: in run
    self.resolve_turn(player_action, opponent_action)
main_game/scenes/main_game_scene.py:99: in resolve_turn
    self.execute_action(acting_player, defending_player, action)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <main_game.scenes.main_game_scene.MainGameScene object at 0x[REDACTED]>
acting_player = Basic Opponent, defending_player = Default Player
action = SelectThing(Creature(dumbird))

    def execute_action(self, acting_player, defending_player, action):
        if isinstance(action.thing, Creature):
            self.execute_swap(acting_player, action.thing)
            # Apply queued skill damage if the opponent chose to attack
>           opponent_action = self.player_action if acting_player == self.opponent else self.opponent_action
E           AttributeError: 'MainGameScene' object has no attribute 'player_action'

main_game/scenes/main_game_scene.py:105: AttributeError
----------------------------- Captured stdout call -----------------------------
starting random run iteration 0
It's your turn, Default Player!
It's Basic Opponent's turn!
Bubwool used Tackle and dealt 5 damage to Scizard!
Basic Opponent swapped to Dumbird!
_____________________ test_full_game_flow_random_with_bots _____________________

    def test_full_game_flow_random_with_bots():
        for i in range(10):
            print(f""starting random run iteration {i}"")
            HumanListener.random_mode = True
            HumanListener.random_mode_counter = 100  # 100 moves suffice for running through some common scenarios in the game
            App.matchmaking_wait_time = 0
            original_wait_time = App.matchmaking_wait_time
    
            app = App()
    
            # Create a human player
            human_player = app.create_player(""HumanPlayer"")
            human_player.set_listener(HumanListener())
    
            try:
>               app.run(human_player)

main_game/tests/test_whole_game.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../../mge2/mini_game_engine/engine/lib.py:557: in run
    self.transition_to_scene(self.entry_point_scene_id, player=player)
../../../../mge2/mini_game_engine/engine/lib.py:673: in transition_to_scene
    self.__run_scene(scene)
../../../../mge2/mini_game_engine/engine/lib.py:717: in __run_scene
    scene.run()
main_game/scenes/main_menu_scene.py:24: in run
    self._transition_to_scene(""MainGameScene"")
../../../../mge2/mini_game_engine/engine/lib.py:427: in _transition_to_scene
    self._app.transition_to_scene(scene_name, player=self.player)
../../../../mge2/mini_game_engine/engine/lib.py:673: in transition_to_scene
    self.__run_scene(scene)
../../../../mge2/mini_game_engine/engine/lib.py:717: in __run_scene
    scene.run()
main_game/scenes/main_game_scene.py:33: in run
    self.resolve_turn(player_action, opponent_action)
main_game/scenes/main_game_scene.py:99: in resolve_turn
    self.execute_action(acting_player, defending_player, action)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <main_game.scenes.main_game_scene.MainGameScene object at 0x[REDACTED]>
acting_player = Default Player, defending_player = Basic Opponent
action = SelectThing(Creature(dumbird))

    def execute_action(self, acting_player, defending_player, action):
        if isinstance(action.thing, Creature):
            self.execute_swap(acting_player, action.thing)
            # Apply queued skill damage if the opponent chose to attack
>           opponent_action = self.player_action if acting_player == self.opponent else self.opponent_action
E           AttributeError: 'MainGameScene' object has no attribute 'opponent_action'

main_game/scenes/main_game_scene.py:105: AttributeError
----------------------------- Captured stdout call -----------------------------
starting random run iteration 0
broadcast: {'__type': 'OnGameStart'}
It's your turn, Default Player!
It's Basic Opponent's turn!
Default Player swapped to Dumbird!
=========================== short test summary info ============================
FAILED main_game/tests/test_main_game_scene.py::TestMainGameSceneRandomRun::test_main_game_scene_random_run - AttributeError: 'MainGameScene' object has no attribute 'player_action'
FAILED main_game/tests/test_whole_game.py::test_full_game_flow_random_with_bots - AttributeError: 'MainGameScene' object has no attribute 'opponent_action'
========================= 2 failed, 1 passed in [REDACTED]s ==========================
PYTEST_EXIT_CODE: 1
","Traceback (most recent call last):
  File ""/home/runner/work/volter-monorepo/volter-monorepo/volter-monorepo/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py"", line 72, in execute
    await self.sdk.execute_as_task(PytestRunnerAgent, verbose=False)
  File ""/home/runner/work/volter-monorepo/volter-monorepo/volter-monorepo/packages/volter-common/common/sdk/SDK.py"", line 274, in execute_as_task
    response = await agent.execute()
               ^^^^^^^^^^^^^^^^^^^^^
  File ""/home/runner/work/volter-monorepo/volter-monorepo/volter-monorepo/packages/lib-volter-mge2/mge_agents/internal/game/pytest_runner_agent/logic.py"", line 30, in execute
    output = run_pytest(test_file_path, project_root=self.sdk.project_directory, verbose=self.verbose)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/runner/work/volter-monorepo/volter-monorepo/volter-monorepo/packages/lib-std-agents/agent_lib/random_run_utils.py"", line 119, in run_pytest
    raise AssertionError(f""Pytest failed with exit code {exit_code}. Output:\n{output}"")
AssertionError: Pytest failed with exit code 1. Output:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-7.3.1, pluggy-1.5.0
rootdir: [REDACT]/volter-monorepo/packages/lib-volter-mge2
configfile: pytest.ini
plugins: metadata-3.1.1, anyio-4.6.2.post1, Faker-30.6.0, timeout-2.3.1, time-machine-2.16.0, html-3.2.0, asyncio-0.23.8, sugar-0.9.7, cov-4.1.0
asyncio: mode=Mode.STRICT
collected 3 items

main_game/tests/test_main_game_scene.py F                                [ 33%]
main_game/tests/test_main_menu_scene.py .                                [ 66%]
main_game/tests/test_whole_game.py F                                     [100%]

=================================== FAILURES ===================================
__________ TestMainGameSceneRandomRun.test_main_game_scene_random_run __________

self = <tests.test_main_game_scene.TestMainGameSceneRandomRun object at 0x[REDACTED]>
app = <main_game.main.App object at 0x[REDACTED]>

    def test_main_game_scene_random_run(self, app):
        for i in range(10):
            print(f""starting random run iteration {i}"")
            HumanListener.random_mode = True
            HumanListener.random_mode_counter = 30  # Increased to 30 for more complex scene
    
            player = app.create_player(f""player_{i}"")
            main_game_scene = MainGameScene(app, player)
    
            class TransitionFromScene(Exception):
                pass
    
            def exit_scene(*args, **kwargs):
                raise TransitionFromScene()
    
            with patch.object(MainGameScene, '_transition_to_scene', side_effect=exit_scene) as mock_transition, \
                    patch.object(MainGameScene, '_quit_whole_game') as mock_quit:
    
                try:
>                   main_game_scene.run()

main_game/tests/test_main_game_scene.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main_game/scenes/main_game_scene.py:33: in run
    self.resolve_turn(player_action, opponent_action)
main_game/scenes/main_game_scene.py:99: in resolve_turn
    self.execute_action(acting_player, defending_player, action)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <main_game.scenes.main_game_scene.MainGameScene object at 0x[REDACTED]>
acting_player = Basic Opponent, defending_player = Default Player
action = SelectThing(Creature(dumbird))

    def execute_action(self, acting_player, defending_player, action):
        if isinstance(action.thing, Creature):
            self.execute_swap(acting_player, action.thing)
            # Apply queued skill damage if the opponent chose to attack
>           opponent_action = self.player_action if acting_player == self.opponent else self.opponent_action
E           AttributeError: 'MainGameScene' object has no attribute 'player_action'

main_game/scenes/main_game_scene.py:105: AttributeError
----------------------------- Captured stdout call -----------------------------
starting random run iteration 0
It's your turn, Default Player!
It's Basic Opponent's turn!
Bubwool used Tackle and dealt 5 damage to Scizard!
Basic Opponent swapped to Dumbird!
_____________________ test_full_game_flow_random_with_bots _____________________

    def test_full_game_flow_random_with_bots():
        for i in range(10):
            print(f""starting random run iteration {i}"")
            HumanListener.random_mode = True
            HumanListener.random_mode_counter = 100  # 100 moves suffice for running through some common scenarios in the game
            App.matchmaking_wait_time = 0
            original_wait_time = App.matchmaking_wait_time
    
            app = App()
    
            # Create a human player
            human_player = app.create_player(""HumanPlayer"")
            human_player.set_listener(HumanListener())
    
            try:
>               app.run(human_player)

main_game/tests/test_whole_game.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../../mge2/mini_game_engine/engine/lib.py:557: in run
    self.transition_to_scene(self.entry_point_scene_id, player=player)
../../../../mge2/mini_game_engine/engine/lib.py:673: in transition_to_scene
    self.__run_scene(scene)
../../../../mge2/mini_game_engine/engine/lib.py:717: in __run_scene
    scene.run()
main_game/scenes/main_menu_scene.py:24: in run
    self._transition_to_scene(""MainGameScene"")
../../../../mge2/mini_game_engine/engine/lib.py:427: in _transition_to_scene
    self._app.transition_to_scene(scene_name, player=self.player)
../../../../mge2/mini_game_engine/engine/lib.py:673: in transition_to_scene
    self.__run_scene(scene)
../../../../mge2/mini_game_engine/engine/lib.py:717: in __run_scene
    scene.run()
main_game/scenes/main_game_scene.py:33: in run
    self.resolve_turn(player_action, opponent_action)
main_game/scenes/main_game_scene.py:99: in resolve_turn
    self.execute_action(acting_player, defending_player, action)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <main_game.scenes.main_game_scene.MainGameScene object at 0x[REDACTED]>
acting_player = Default Player, defending_player = Basic Opponent
action = SelectThing(Creature(dumbird))

    def execute_action(self, acting_player, defending_player, action):
        if isinstance(action.thing, Creature):
            self.execute_swap(acting_player, action.thing)
            # Apply queued skill damage if the opponent chose to attack
>           opponent_action = self.player_action if acting_player == self.opponent else self.opponent_action
E           AttributeError: 'MainGameScene' object has no attribute 'opponent_action'

main_game/scenes/main_game_scene.py:105: AttributeError
----------------------------- Captured stdout call -----------------------------
starting random run iteration 0
broadcast: {'__type': 'OnGameStart'}
It's your turn, Default Player!
It's Basic Opponent's turn!
Default Player swapped to Dumbird!
=========================== short test summary info ============================
FAILED main_game/tests/test_main_game_scene.py::TestMainGameSceneRandomRun::test_main_game_scene_random_run - AttributeError: 'MainGameScene' object has no attribute 'player_action'
FAILED main_game/tests/test_whole_game.py::test_full_game_flow_random_with_bots - AttributeError: 'MainGameScene' object has no attribute 'opponent_action'
========================= 2 failed, 1 passed in [REDACTED]s ==========================
PYTEST_EXIT_CODE: 1


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/runner/work/volter-monorepo/volter-monorepo/volter-monorepo/packages/lib-volter-mge2/mge_bench/bench_utils.py"", line 92, in execute_agent
    asyncio.run(agent.execute())
  File ""/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/asyncio/runners.py"", line 190, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File ""/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/asyncio/runners.py"", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/opt/hostedtoolcache/Python/3.11.10/x64/lib/python3.11/asyncio/base_events.py"", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File ""/home/runner/work/volter-monorepo/volter-monorepo/volter-monorepo/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py"", line 79, in execute
    raise FixableException(
common.exceptions.FixableException: After 5 attempts to debug, could not create a bug-free game. Still have error Pytest failed with exit code 1. Output:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-7.3.1, pluggy-1.5.0
rootdir: [REDACT]/volter-monorepo/packages/lib-volter-mge2
configfile: pytest.ini
plugins: metadata-3.1.1, anyio-4.6.2.post1, Faker-30.6.0, timeout-2.3.1, time-machine-2.16.0, html-3.2.0, asyncio-0.23.8, sugar-0.9.7, cov-4.1.0
asyncio: mode=Mode.STRICT
collected 3 items

main_game/tests/test_main_game_scene.py F                                [ 33%]
main_game/tests/test_main_menu_scene.py .                                [ 66%]
main_game/tests/test_whole_game.py F                                     [100%]

=================================== FAILURES ===================================
__________ TestMainGameSceneRandomRun.test_main_game_scene_random_run __________

self = <tests.test_main_game_scene.TestMainGameSceneRandomRun object at 0x[REDACTED]>
app = <main_game.main.App object at 0x[REDACTED]>

    def test_main_game_scene_random_run(self, app):
        for i in range(10):
            print(f""starting random run iteration {i}"")
            HumanListener.random_mode = True
            HumanListener.random_mode_counter = 30  # Increased to 30 for more complex scene
    
            player = app.create_player(f""player_{i}"")
            main_game_scene = MainGameScene(app, player)
    
            class TransitionFromScene(Exception):
                pass
    
            def exit_scene(*args, **kwargs):
                raise TransitionFromScene()
    
            with patch.object(MainGameScene, '_transition_to_scene', side_effect=exit_scene) as mock_transition, \
                    patch.object(MainGameScene, '_quit_whole_game') as mock_quit:
    
                try:
>                   main_game_scene.run()

main_game/tests/test_main_game_scene.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
main_game/scenes/main_game_scene.py:33: in run
    self.resolve_turn(player_action, opponent_action)
main_game/scenes/main_game_scene.py:99: in resolve_turn
    self.execute_action(acting_player, defending_player, action)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <main_game.scenes.main_game_scene.MainGameScene object at 0x[REDACTED]>
acting_player = Basic Opponent, defending_player = Default Player
action = SelectThing(Creature(dumbird))

    def execute_action(self, acting_player, defending_player, action):
        if isinstance(action.thing, Creature):
            self.execute_swap(acting_player, action.thing)
            # Apply queued skill damage if the opponent chose to attack
>           opponent_action = self.player_action if acting_player == self.opponent else self.opponent_action
E           AttributeError: 'MainGameScene' object has no attribute 'player_action'

main_game/scenes/main_game_scene.py:105: AttributeError
----------------------------- Captured stdout call -----------------------------
starting random run iteration 0
It's your turn, Default Player!
It's Basic Opponent's turn!
Bubwool used Tackle and dealt 5 damage to Scizard!
Basic Opponent swapped to Dumbird!
_____________________ test_full_game_flow_random_with_bots _____________________

    def test_full_game_flow_random_with_bots():
        for i in range(10):
            print(f""starting random run iteration {i}"")
            HumanListener.random_mode = True
            HumanListener.random_mode_counter = 100  # 100 moves suffice for running through some common scenarios in the game
            App.matchmaking_wait_time = 0
            original_wait_time = App.matchmaking_wait_time
    
            app = App()
    
            # Create a human player
            human_player = app.create_player(""HumanPlayer"")
            human_player.set_listener(HumanListener())
    
            try:
>               app.run(human_player)

main_game/tests/test_whole_game.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../../mge2/mini_game_engine/engine/lib.py:557: in run
    self.transition_to_scene(self.entry_point_scene_id, player=player)
../../../../mge2/mini_game_engine/engine/lib.py:673: in transition_to_scene
    self.__run_scene(scene)
../../../../mge2/mini_game_engine/engine/lib.py:717: in __run_scene
    scene.run()
main_game/scenes/main_menu_scene.py:24: in run
    self._transition_to_scene(""MainGameScene"")
../../../../mge2/mini_game_engine/engine/lib.py:427: in _transition_to_scene
    self._app.transition_to_scene(scene_name, player=self.player)
../../../../mge2/mini_game_engine/engine/lib.py:673: in transition_to_scene
    self.__run_scene(scene)
../../../../mge2/mini_game_engine/engine/lib.py:717: in __run_scene
    scene.run()
main_game/scenes/main_game_scene.py:33: in run
    self.resolve_turn(player_action, opponent_action)
main_game/scenes/main_game_scene.py:99: in resolve_turn
    self.execute_action(acting_player, defending_player, action)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <main_game.scenes.main_game_scene.MainGameScene object at 0x[REDACTED]>
acting_player = Default Player, defending_player = Basic Opponent
action = SelectThing(Creature(dumbird))

    def execute_action(self, acting_player, defending_player, action):
        if isinstance(action.thing, Creature):
            self.execute_swap(acting_player, action.thing)
            # Apply queued skill damage if the opponent chose to attack
>           opponent_action = self.player_action if acting_player == self.opponent else self.opponent_action
E           AttributeError: 'MainGameScene' object has no attribute 'opponent_action'

main_game/scenes/main_game_scene.py:105: AttributeError
----------------------------- Captured stdout call -----------------------------
starting random run iteration 0
broadcast: {'__type': 'OnGameStart'}
It's your turn, Default Player!
It's Basic Opponent's turn!
Default Player swapped to Dumbird!
=========================== short test summary info ============================
FAILED main_game/tests/test_main_game_scene.py::TestMainGameSceneRandomRun::test_main_game_scene_random_run - AttributeError: 'MainGameScene' object has no attribute 'player_action'
FAILED main_game/tests/test_whole_game.py::test_full_game_flow_random_with_bots - AttributeError: 'MainGameScene' object has no attribute 'opponent_action'
========================= 2 failed, 1 passed in [REDACTED]s ==========================
PYTEST_EXIT_CODE: 1

",['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_05_1/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:51:33,31c2a7cc-aed0-4a19-8b94-42dd6d48e1d0,OneShotCoreAgent,creature_battler_05,2,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_05_2/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:56:22,492e7919-0110-4237-b91c-d5355f459329,OneShotCoreAgent,creature_battler_05,3,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_05_3/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 13:58:24,ba69e967-f725-45ce-afaa-ea2510c98092,OneShotCoreAgent,creature_battler_05,4,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_05_4/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 14:02:12,8d308750-5ad4-4a5b-9cc6-3ef2d41742b8,OneShotCoreAgent,creature_battler_05,5,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_05_5/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 14:04:44,b4a3b51b-d4d3-4ac4-8d79-781f233f051e,OneShotCoreAgent,creature_battler_05,6,success,,,['new_prompt_logs/999999_305201_OneShotCoreAgent'],ladder/creature_battler_05_6/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
2024-10-17 14:06:16,edbe2e92-be11-4080-9c33-7fa20c2e909a,OneShotCoreAgent,creature_battler_05,7,success,,,['new_prompt_logs/999999_491660_OneShotCoreAgent'],ladder/creature_battler_05_7/main_game,https://github.com/volter-ai/volter-monorepo/blob/d285d2d36095918640614bd9a40ddc02a6cc83ce/packages/lib-volter-mge2/mge_agents/internal/one_shot_gen/one_shot_core.py
